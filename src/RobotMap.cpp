// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::intakeIntakeTalon;
std::shared_ptr<Encoder> RobotMap::pIDTestSystemEnc1;
std::shared_ptr<CANTalon> RobotMap::pIDTestSystemTalon4;
std::shared_ptr<CANTalon> RobotMap::pIDTestSystemTalonOther;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
const double PI  =3.141592653589793238463;

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    intakeIntakeTalon.reset(new CANTalon(1));
    lw->AddActuator("Intake", "IntakeTalon", intakeIntakeTalon);
    
    pIDTestSystemEnc1.reset(new Encoder(9, 8, false, Encoder::k4X));
    lw->AddSensor("PIDTestSystem", "Enc1", pIDTestSystemEnc1);
    pIDTestSystemEnc1->SetDistancePerPulse((2.0*2.0*PI)/(20.0));
    pIDTestSystemEnc1->SetPIDSourceType(PIDSourceType::kRate);
    pIDTestSystemTalon4.reset(new CANTalon(4));
    lw->AddActuator("PIDTestSystem", "Talon4", pIDTestSystemTalon4);
    pIDTestSystemTalon4.reset(new CANTalon(2));
    lw->AddActuator("PIDTestSystem", "TalonOther", pIDTestSystemTalonOther);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
